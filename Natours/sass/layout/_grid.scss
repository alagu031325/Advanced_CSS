// define width of the row

.grid-test {
  display: none;
  pointer-events: none;
  opacity: 0;
}
.row {
  //if we have enough available space then we will have the width that we specified else if viewport is smaller than the width then it simply takes the 100% of the available space
  max-width: $grid-width;
  //to center a block element - left and right both will be automatically calculated and will be the same
  margin: 0 auto;

  //using not pseudo class - we select everything except last child
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  @include respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  @include clearfix;

  //attribute selector - '^' selects all of the element in which the class attribute starts with 'col-', whereas '*' selector selects any col that contains 'col-' and '$' selector selects any col that has class ending with 'col-'
  [class^="col-"] {
    //height will collapse
    float: left;
    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }

    //all columns transferred to one row in mobile layout
    @include respond(tab-port) {
      width: 100% !important;
    }
  }

  //selecting col inside the row selector
  .col-1-of-2 {
    //can do mathematical operations and mix units - sass operations we cant mix units since this kind of calculations will happen while rendering the layout using visual formatting model and not while compiling
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    // 2 times the width of 1-of-3 column and add the gutter width
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}
