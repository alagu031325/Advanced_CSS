.popup {
  width: 100%;
  height: 100vh;
  background-color: rgba($color-black, 0.8);
  position: fixed;
  top: 0;
  left: 0;
  z-index: 2000;
  //with display set to none we cant animate the effect
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s;

  &__content {
    @include absCenter;
    // 75% of the container width
    width: 75%;
    background-color: $color-white;
    box-shadow: 0 2rem 4rem rgba($color-black, 0.2);
    border-radius: 3px;
    //parent we set the display to table - instead of using html table tags
    display: table;
    overflow: hidden;
    opacity: 0;
    //repeat the transform that is coming from mixin since each element can only have 1 transform
    transform: translate(-50%, -50%) scale(0.25);
    //fades in after 0.2s allowing the grey background to appear first
    transition: all 0.4s 0.2s;
  }

  &__left {
    width: 33.333333%;
    //to make left and right of same height - if both are table-cell the browser will automatically give them the same height
    display: table-cell;
    vertical-align: middle;
  }

  &__right {
    //left n right roughly should make 100%
    width: 66.666667%;
    display: table-cell;
    vertical-align: middle;
    padding: 3rem 5rem;
  }

  &__img {
    width: 100%;
    display: block;
  }

  &__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;
    //automatically browser creates columns for us
    column-count: 2;
    column-gap: 4rem;
    column-rule: 1px solid $color-grey-light-2;
    //default value is none - html lang="en" settings is a must
    hyphens: auto;
    //to work in other browsers we might need -moz-hyphens(mozilla), -ms-hyphens(microsoft edge), -webkit-hyphens(chrome,safari).
  }

  //when anchor redirects to #popup - popup becomes the target - so target pseudo class applies to the element which is the target when we click on a button/anchor or when url changes
  &:target {
    opacity: 1;
    visibility: visible;
  }

  //when popup becomes the target we style the child element that is popup__content
  &:target &__content {
    opacity: 1;
    //repeat the transform that is coming from mixin since each element can only have 1 transform
    transform: translate(-50%, -50%) scale(1);
  }

  &__close {
    &:link,
    &:visited {
      color: $color-grey-dark-1;
      position: absolute;
      top: 2.5rem;
      right: 2.5rem;
      font-size: 3rem;
      text-decoration: none;
      display: inline-block;
      transition: all 0.2s;
      //   if it takes the predefined line height then the height of the element increases
      line-height: 1;
    }

    &:hover {
      color: $color-primary;
    }
  }
}
